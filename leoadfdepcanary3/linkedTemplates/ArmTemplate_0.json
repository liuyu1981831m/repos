{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "leoadfdepcanary3"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		},
		"AzureBlobStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d3bb3b2e-9a7e-4194-9960-5171bd192117/resourceGroups/testconnection/providers/Microsoft.Storage/storageAccounts/leoblob"
		},
		"AzureBlobStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d3bb3b2e-9a7e-4194-9960-5171bd192117/resourceGroups/LeoRGLock/providers/Microsoft.Storage/storageAccounts/leobloblock"
		},
		"AzureBlobStorage2_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage4_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/76f6943c-c9e2-4915-bead-2a042561e8e0/resourceGroups/A365InternalRg-2670/providers/Microsoft.Storage/storageAccounts/0510khvcwqzak3ccbgmt8l4f"
		},
		"AzureBlobStorage4_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureDataLakeStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d3bb3b2e-9a7e-4194-9960-5171bd192117/resourceGroups/leorg/providers/Microsoft.Storage/storageAccounts/leocanarytestgen2"
		},
		"AzureDataLakeStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"leocanarytestgen2.dfs.core.windows.net"
			]
		},
		"synapse-ws-custstgacct--leotestgitpe-leotestgitpegen2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d3bb3b2e-9a7e-4194-9960-5171bd192117/resourceGroups/leorg/providers/Microsoft.Storage/storageAccounts/leotestgitpegen2"
		},
		"synapse-ws-custstgacct--leotestgitpe-leotestgitpegen2_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"synapse-ws-sql--leocanaryvnet_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/0ee78edb-a0ad-456c-a0a2-901bf542c102/resourceGroups/leorg/providers/Microsoft.Synapse/workspaces/leocanaryvnet"
		},
		"synapse-ws-sql--leocanaryvnet_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"synapse-ws-sql--leocanaryvnet_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"leocanaryvnet.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sql--leotestgitpe_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d3bb3b2e-9a7e-4194-9960-5171bd192117/resourceGroups/leorg/providers/Microsoft.Synapse/workspaces/leotestgitpe"
		},
		"synapse-ws-sql--leotestgitpe_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"synapse-ws-sql--leotestgitpe_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"leotestgitpe.10093ed5-8d02-40cb-96e9-e8461f85d0f0.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sqlOnDemand--leocanaryvnet_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/0ee78edb-a0ad-456c-a0a2-901bf542c102/resourceGroups/leorg/providers/Microsoft.Synapse/workspaces/leocanaryvnet"
		},
		"synapse-ws-sqlOnDemand--leocanaryvnet_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"synapse-ws-sqlOnDemand--leocanaryvnet_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"leocanaryvnet-ondemand.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sqlOnDemand--leotestgitpe_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d3bb3b2e-9a7e-4194-9960-5171bd192117/resourceGroups/leorg/providers/Microsoft.Synapse/workspaces/leotestgitpe"
		},
		"synapse-ws-sqlOnDemand--leotestgitpe_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"synapse-ws-sqlOnDemand--leotestgitpe_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"leotestgitpe-ondemand.10093ed5-8d02-40cb-96e9-e8461f85d0f0.sql.azuresynapse.net"
			]
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://leocanarytestgen2.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"externalComputeInfo": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": true,
							"externalComputeInfo": []
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VNetIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": true,
							"externalComputeInfo": []
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage1_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage2_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage4')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage4_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage4_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage1_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage1_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-custstgacct--leotestgitpe-leotestgitpegen2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-custstgacct--leotestgitpe-leotestgitpegen2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-custstgacct--leotestgitpe-leotestgitpegen2_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sql--leocanaryvnet')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--leocanaryvnet_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sql--leocanaryvnet_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sql--leocanaryvnet_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sql--leotestgitpe')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--leotestgitpe_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sql--leotestgitpe_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sql--leotestgitpe_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sqlOnDemand--leocanaryvnet')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--leocanaryvnet_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sqlOnDemand--leocanaryvnet_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sqlOnDemand--leocanaryvnet_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sqlOnDemand--leotestgitpe')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--leotestgitpe_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sqlOnDemand--leotestgitpe_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sqlOnDemand--leotestgitpe_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Taxi Demo Interactive E2E')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create Dataflow Debug session",
						"description": " ",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://ajayseasia.dev.azuresynapse.net/createDataflowDebugSession?api-version=2018-06-01",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"dataFlowName": "globaldataflowsession",
								"timeToLive": 60,
								"integrationRuntime": {
									"name": "BigIR",
									"properties": {
										"type": "Managed",
										"typeProperties": {
											"computeProperties": {
												"location": "AutoResolve",
												"dataFlowProperties": {
													"computeType": "General",
													"coreCount": 48,
													"timeToLive": 0
												}
											}
										}
									}
								}
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://dev.azuresynapse.net"
							}
						}
					},
					{
						"name": "Add Dataflow",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create Dataflow Debug session",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://ajayseasia.dev.azuresynapse.net/addDataFlowToDebugSession?api-version=2018-06-01",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n  \"dataFlow\": {\n    \"name\": \"Taxi Demo ADLS to DW\",\n    \"properties\": {\n      \"description\": \" \",\n      \"type\": \"MappingDataFlow\",\n      \"typeProperties\": {\n        \"sources\": [\n          {\n            \"dataset\": {\n              \"referenceName\": \"TripDataGen2Msi\",\n              \"type\": \"DatasetReference\"\n            },\n            \"name\": \"TripData\"\n          },\n          {\n            \"dataset\": {\n              \"referenceName\": \"FareDataGen2Msi\",\n              \"type\": \"DatasetReference\"\n            },\n            \"name\": \"TripFare\"\n          }\n        ],\n        \"sinks\": [\n          {\n            \"dataset\": {\n              \"referenceName\": \"DayStatsDwMsi\",\n              \"type\": \"DatasetReference\"\n            },\n            \"name\": \"DayStatsSink\"\n          }\n        ],\n        \"transformations\": [\n          {\n            \"name\": \"JoinMatchedData\"\n          },\n          {\n            \"name\": \"AggregateDayStats\"\n          }\n        ],\n        \"script\": \"source(output(\\n\\t\\tmedallion as string,\\n\\t\\thack_license as string,\\n\\t\\tvendor_id as string,\\n\\t\\trate_code as string,\\n\\t\\tstore_and_fwd_flag as string,\\n\\t\\tpickup_datetime as string,\\n\\t\\tdropoff_datetime as string,\\n\\t\\tpassenger_count as short,\\n\\t\\ttrip_time_in_secs as long,\\n\\t\\ttrip_distance as double,\\n\\t\\tpickup_longitude as double,\\n\\t\\tpickup_latitude as double,\\n\\t\\tdropoff_longitude as double,\\n\\t\\tdropoff_latitude as double\\n\\t),\\n\\tallowSchemaDrift: false,\\n\\tvalidateSchema: false) ~> TripData\\nsource(output(\\n\\t\\tmedallion as string,\\n\\t\\t{ hack_license} as string,\\n\\t\\t{ vendor_id} as string,\\n\\t\\t{ pickup_datetime} as string,\\n\\t\\t{ payment_type} as string,\\n\\t\\t{ fare_amount} as double,\\n\\t\\t{ surcharge} as double,\\n\\t\\t{ mta_tax} as double,\\n\\t\\t{ tip_amount} as double,\\n\\t\\t{ tolls_amount} as double,\\n\\t\\t{ total_amount} as double\\n\\t),\\n\\tallowSchemaDrift: false,\\n\\tvalidateSchema: false) ~> TripFare\\nTripData, TripFare join(hack_license == { hack_license}\\n\\t&& TripData@medallion == TripFare@medallion\\n\\t&& vendor_id == { vendor_id}\\n\\t&& pickup_datetime == { pickup_datetime},\\n\\tjoinType:'inner',\\n\\tbroadcast: 'none')~> JoinMatchedData\\nJoinMatchedData aggregate(groupBy(DayOfTheWeek = dayOfWeek(toDate(pickup_datetime,'yyyy-MM-dd hh:mm:ss'))),\\n\\ttrip_distance = round(avg(trip_distance), 2),\\n\\t\\tpassenger_count = round(avg(passenger_count), 2),\\n\\t\\ttrip_time_in_secs = round(avg(trip_time_in_secs)/60, 2),\\n\\t\\taverage_fare = round(avg({ total_amount}), 2)) ~> AggregateDayStats\\nAggregateDayStats sink(allowSchemaDrift: true,\\n\\tvalidateSchema: false,\\n\\tdeletable:false,\\n\\tinsertable:true,\\n\\tupdateable:false,\\n\\tupsertable:false,\\n\\trecreate:true,\\n\\tformat: 'table',\\n\\tstaged: false,\\n\\tpartitionBy('hash', 1)) ~> DayStatsSink\"\n      }\n    }\n  },\n  \"datasets\": [\n    {\n      \"name\": \"TripDataGen2Msi\",\n      \"properties\": {\n        \"linkedServiceName\": {\n          \"referenceName\": \"ajayseasia-WorkspaceDefaultStorage\",\n          \"type\": \"LinkedServiceReference\"\n        },\n        \"annotations\": [],\n        \"type\": \"DelimitedText\",\n        \"typeProperties\": {\n          \"location\": {\n            \"type\": \"AzureBlobFSLocation\",\n            \"fileName\": \"trip_data_1.csv\",\n            \"fileSystem\": \"mycontainer\"\n          },\n          \"columnDelimiter\": \",\",\n          \"escapeChar\": \"\\\\\",\n          \"firstRowAsHeader\": true,\n          \"quoteChar\": \"\\\"\"\n        },\n        \"schema\": [\n          {\n            \"name\": \"medallion\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"hack_license\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"vendor_id\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"rate_code\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"store_and_fwd_flag\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"pickup_datetime\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"dropoff_datetime\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"passenger_count\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"trip_time_in_secs\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"trip_distance\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"pickup_longitude\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"pickup_latitude\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"dropoff_longitude\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \"dropoff_latitude\",\n            \"type\": \"String\"\n          }\n        ]\n      },\n      \"type\": \"Microsoft.Synapse/workspaces/datasets\"\n    },\n    {\n      \"name\": \"FareDataGen2Msi\",\n      \"properties\": {\n        \"linkedServiceName\": {\n          \"referenceName\": \"ajayseasia-WorkspaceDefaultStorage\",\n          \"type\": \"LinkedServiceReference\"\n        },\n        \"annotations\": [],\n        \"type\": \"DelimitedText\",\n        \"typeProperties\": {\n          \"location\": {\n            \"type\": \"AzureBlobFSLocation\",\n            \"fileName\": \"trip_fare_1.csv\",\n            \"fileSystem\": \"mycontainer\"\n          },\n          \"columnDelimiter\": \",\",\n          \"escapeChar\": \"\\\\\",\n          \"firstRowAsHeader\": true,\n          \"quoteChar\": \"\\\"\"\n        },\n        \"schema\": [\n          {\n            \"name\": \"medallion\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" hack_license\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" vendor_id\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" pickup_datetime\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" payment_type\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" fare_amount\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" surcharge\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" mta_tax\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" tip_amount\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" tolls_amount\",\n            \"type\": \"String\"\n          },\n          {\n            \"name\": \" total_amount\",\n            \"type\": \"String\"\n          }\n        ]\n      },\n      \"type\": \"Microsoft.Synapse/workspaces/datasets\"\n    },\n    {\n      \"name\": \"DayStatsDwMsi\",\n      \"properties\": {\n        \"linkedServiceName\": {\n          \"referenceName\": \"ajayseasia-WorkspaceDefaultSqlServer\",\n          \"type\": \"LinkedServiceReference\",\n          \"parameters\": {\n            \"DBName\": \"sql\"\n          }\n        },\n        \"annotations\": [],\n        \"type\": \"AzureSqlDWTable\",\n        \"schema\": [],\n        \"typeProperties\": {\n          \"schema\": \"dbo\",\n          \"table\": \"DayStats\"\n        }\n      },\n      \"type\": \"Microsoft.Synapse/workspaces/datasets\"\n    }\n  ],\n  \"linkedServices\": [\n    {\n      \"name\": \"ajayseasia-WorkspaceDefaultStorage\",\n      \"type\": \"Microsoft.Synapse/workspaces/linkedservices\",\n      \"properties\": {\n        \"typeProperties\": {\n          \"url\": \"https://ajaygen2seasia.dfs.core.windows.net\"\n        },\n        \"type\": \"AzureBlobFS\",\n        \"annotations\": []\n      }\n    },\n    {\n      \"name\": \"ajayseasia-WorkspaceDefaultSqlServer\",\n      \"type\": \"Microsoft.Synapse/workspaces/linkedservices\",\n      \"properties\": {\n        \"typeProperties\": {\n          \"connectionString\": \"Data Source=tcp:ajayseasia.sql.azuresynapse.net,1433;Initial Catalog=@@{linkedService().DBName}\"\n        },\n        \"parameters\": {\n          \"DBName\": {\n            \"type\": \"String\"\n          }\n        },\n        \"type\": \"AzureSqlDW\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"debugSettings\": {\n    \"sourceSettings\": [\n      {\n        \"sourceName\": \"TripData\",\n        \"rowLimit\": 1000\n      },\n      {\n        \"sourceName\": \"TripFare\",\n        \"rowLimit\": 1000\n      }\n    ],\n    \"parameters\": {},\n    \"datasetParameters\": {}\n  },\n  \"sessionId\": \"@{activity('Create Dataflow Debug session').output.sessionId}\",\n  \"userSessionId\": \"29596535-323b-447a-bd73-659d6e3f024d\",\n  \"incrementalDebug\": false\n}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://dev.azuresynapse.net"
							}
						}
					},
					{
						"name": "Perform DataPreview",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Add Dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://ajayseasia.dev.azuresynapse.net/executeDataFlowDebugCommand?api-version=2018-06-01",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n  \"commandPayload\": {\n    \"streamName\": \"DayStatsSink\",\n    \"rowLimits\": 100,\n    \"schemaOnly\": true\n  },\n  \"command\": \"executePreviewQuery\",\n  \"sessionId\": \"@{activity('Create Dataflow Debug session').output.sessionId}\",\n  \"userSessionId\": \"29596535-323b-447a-bd73-659d6e3f024d\",\n  \"dataFlowName\": \"Taxi Demo ADLS to DW\"\n}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://dev.azuresynapse.net"
							}
						}
					},
					{
						"name": "Validate and Cleanup",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Perform DataPreview",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals('Succeeded', activity('Perform DataPreview').output.status)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail activity",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://activityFailed.com",
										"method": "GET",
										"headers": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Delete session",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://ajayseasia.dev.azuresynapse.net/deleteDataflowDebugSession?api-version=2018-06-01",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\"dataFlowName\":\"globaldataflowsession\",\"sessionId\":\"@{activity('Create Dataflow Debug session').output.sessionId}\"}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://dev.azuresynapse.net"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"AddDataflowPayloadString": {
						"type": "String"
					},
					"DataPreviewPayloadString": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-06-10T21:51:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		}
	]
}